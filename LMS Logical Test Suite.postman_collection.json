{
	"info": {
		"_postman_id": "8f872c73-30b7-4591-88e8-ca65b7d27b02",
		"name": "LMS Logical Test Suite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46324362",
		"_collection_link": "https://alidarwish-3041055.postman.co/workspace/Ali-Darwish's-Workspace~d49a5eee-6bc1-42d9-8490-4d58324c8001/collection/46324362-8f872c73-30b7-4591-88e8-ca65b7d27b02?action=share&source=collection_link&creator=46324362"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Signup User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"201 Created\", () => pm.response.to.have.status(201));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{userUsername}}\",\n  \"password\": \"{{userPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login OK\", () => pm.response.to.have.status(200));",
									"const json = pm.response.json();",
									"pm.environment.set(\"token_admin\", json.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{adminUsername}}\",\n  \"password\": \"{{adminPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login OK\", () => pm.response.to.have.status(200));",
									"const json = pm.response.json();",
									"pm.environment.set(\"token_user\", json.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"ali1\",\n  \"password\": \"ali1\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Create Staff",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"200 OK\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer{{token_admin}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"staff1\",\n  \"password\": \"staff1\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/staff",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"staff"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Staff",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login OK\", () => pm.response.to.have.status(200));",
									"const json = pm.response.json();",
									"pm.environment.set(\"token_staff\", json.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{staffUsername}}\",\n  \"password\": \"{{staffPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Librarian",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"200 OK\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdGFmZjEiLCJyb2xlIjoiUk9MRV9TVEFGRiIsImlhdCI6MTc1MzAyNjM1NywiZXhwIjoxNzUzMTEyNzU3fQ.mS2X71l9iXllYsuaiuurFnVfPbtk21KPqwZ11v7q45w",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token_staff}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"librarianUsernam2\",\n  \"password\": \"librarianPassword\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/librarian",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"librarian"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Librarian",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login OK\", () => pm.response.to.have.status(200));",
									"const json = pm.response.json();",
									"pm.environment.set(\"token_librarian\", json.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{librarianUsername}}\",\n  \"password\": \"{{librarianPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"200 OK for admin or staff\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,403]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authors",
			"item": [
				{
					"name": "Get All Authors",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_admin}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Author by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer{{token_admin}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/authors/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"authors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"200 OK for admin, 403 otherwise\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,403]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer{{token_admin}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New Author 3\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"200 OK for admin, 403 otherwise\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,403]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer{{token_admin}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Name\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/authors/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"authors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"204 or 403\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([204,403]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer{{token_admin}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/authors/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"authors",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Members",
			"item": [
				{
					"name": "Create Member",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{librarianToken}}\n",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fullName\": \"Alice Wonderland\",\n  \"email\": \"alice@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListAllMembers",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_staff}}\n",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/api/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAsingleMember",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "UpdateMember",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "DeleteMember",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories & Publishers & Books",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"200 OK for admin, 403 otherwise\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,403]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer{{token_admin}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New cow\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Publisher",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Create Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"200 OK for admin, 403 otherwise\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,403]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjEiLCJyb2xlIjoiUk9MRV9BRE1JTiIsImlhdCI6MTc1MzAzMDc0NywiZXhwIjoxNzUzMTE3MTQ3fQ.nsi6JjPS72-dJhrUsKbhCKB49DzWXl9xBvh7tsT5d98",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token_admin}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"isbn\": \"9780451524935\",\n  \"title\": \"1984\",\n  \"language\": \"English\",\n  \"edition\": \"First\",\n  \"publicationYear\": 1949,\n  \"summary\": \"Dystopian novel detailing life under a totalitarian regime.\",\n  \"coverImageUrl\": \"http://covers.openlibrary.org/b/id/7222246-L.jpg\",\n  \"authorIds\": [1],\n  \"publisherId\": 1,\n  \"categoryId\": 1\n}\n"
						},
						"url": {
							"raw": "{{baseUrl}}/api/books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Books",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Book",
			"item": [
				{
					"name": "Borrow a Book",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_staff}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/transactions/borrow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transactions",
								"borrow"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Return the Book",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token_admin}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}